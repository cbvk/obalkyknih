<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Zoom.Net</name>
    </assembly>
    <members>
        <member name="T:Zoom.Net.Bib1Exception">
            <summary>
            Returning Z39.50 Bib1 fatal error codes as exeptions  
            </summary>
        </member>
        <member name="P:Zoom.Net.Bib1Exception.DiagnosticCode">
            <summary>
            Getting the diagnostic code number of this exception
            </summary>
        </member>
        <member name="T:Zoom.Net.IQuery">
            <summary>
            IQuery 
            represents a set of search criteria which will be submitted to a
            server via a connection. There are various subclasses/interfaces
             of the Query
            class, representing different query syntaxes. 
            </summary>
            <remarks>
            CQL Query C# classes/interfaces are wrappers; the queries are sent 
            to the server unprocessed. See 
            http://www.indexdata.dk/yaz/doc/zoom.query.tkl
            </remarks>
            <remarks>
             CQL client side query format is supported. 
            </remarks>
            <remarks>
             CCL client side query format is not supported. 
            </remarks>
            <remarks>See also Zoom.Net::ICQLQuery 
            and Zoom.Net::IPrefixQuery</remarks>
        </member>
        <member name="P:Zoom.Net.IQuery.QueryString">
            <summary>
            Setting and getting the query string
            </summary>
        </member>
        <member name="T:Zoom.Net.InvalidQueryException">
            <summary>
            Exception thrown when invalid query has been send to server
            </summary>
        </member>
        <member name="T:Zoom.Net.ZoomImplementationException">
            <summary>
            Exception for specific Zoom implementation class errors
            </summary>
        </member>
        <member name="T:Zoom.Net.ConnectionUnavailableException">
            <summary>
            Exception thrown when server does not accept a live connection
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Zoom.Net.IScanTerm" -->
        <member name="P:Zoom.Net.IScanTerm.Term">
            <summary>
            Getting the actual term indexed
            </summary>
        </member>
        <member name="P:Zoom.Net.IScanTerm.Occurences">
            <summary>
            Getting the hit occurencies of this term
            </summary>
        </member>
        <member name="T:Zoom.Net.IRecord">
            <summary>
            IRecord represents a single record or document
            in a result set obtained by querying a server.
            </summary>
            <remarks>
            See also http://www.indexdata.dk/yaz/doc/zoom.records.tkl
            </remarks>
        </member>
        <member name="P:Zoom.Net.IRecord.Content">
            <summary>
            Gets the literal byte content of this record
            </summary>
        </member>
        <member name="P:Zoom.Net.IRecord.Syntax">
            <summary>
            Gets the Syntax description of this record
            </summary>
        </member>
        <member name="P:Zoom.Net.IRecord.Database">
            <summary>
            Gets the name of the database the record was returned from
            </summary>
        </member>
        <member name="T:Zoom.Net.IConnection">
            <summary>
            The Connection class supports methods for instantiation and
            searching of targets, together with the housekeeping and option 
            management methods provided on all classes.
            </summary>
            <remarks>
            Connection
            or an ``application association'', as the OSI terminology in the
            standard has it - represents an ongoing dialogue between the
            client (``origin'' in the standard) and server (``target''). A
            connection is forged by the act of creating a Connection object;
            and initialization is performed implicitly, so that the new object
            is ready to be used immediately. 
            </remarks>
            <remarks>
            Search and Scan operations are supported.
            </remarks>
            <remarks>
            IConnection creation without specifying an actual connection target
            is not supported.
            </remarks>
            <remarks>See also Zoom.Net::IConnectionExtended interface 
            and Zoom.Net::YazSharp::Connection implementation class</remarks>
        </member>
        <member name="M:Zoom.Net.IConnection.Search(Zoom.Net.IQuery)">
            <summary>
            Submitting a Query to a Connection. The resultset is held 
            on the server.
            </summary>
            <param name="query">
            The query is either a PQF or a CQL query.
            </param>
        </member>
        <member name="M:Zoom.Net.IConnection.Scan(Zoom.Net.IPrefixQuery)">
            <summary>
            Submitting a Scan to a Connection. The scanset is held 
            on the server.
            </summary>
            <param name="query">
            The scan query is a subset of PQF, namely the 
            Attributes+Term part.
            </param>
        </member>
        <member name="P:Zoom.Net.IConnection.DatabaseName">
            <summary>
            Setting and getting the databaseName option
            </summary>
        </member>
        <member name="P:Zoom.Net.IConnection.Username">
            <summary>
            Setting and getting the username option
            </summary>
        </member>
        <member name="P:Zoom.Net.IConnection.Password">
            <summary>
            Setting and getting the password option
            </summary>
        </member>
        <member name="P:Zoom.Net.IConnection.Syntax">
            <summary>
            Setting and getting recordSyntax option
            </summary>
        </member>
        <member name="P:Zoom.Net.IConnection.Options">
            <summary>
            Other standard options described at 
            http://zoom.z3950.org/api/zoom-1.4.html#3.8 are
            implemented using the Zoom::Net::IConnectionOptions
            interface.
            </summary>
            <remarks>
            See the following info for all possible values:   
            http://www.indexdata.dk/yaz/doc/zoom.tkl#zoom.connections
            </remarks>
        </member>
        <member name="T:Zoom.Net.IScanSet">
            <summary>
            The Scan Set 
            represents a set of potential query terms which a server suggests
            may be useful. In some cases, the terms are accompanied by hit
            counts.
            </summary>
            Term supported. In Zoom::Net the return values of the Term
            operation are ScanTerm objects rather than strings, which is a
            logical extension of the similar functionality in Record sets
            and Record objects. This is not forseen in the Zoom specifications.
            <remarks>
            </remarks>
            <remarks>
            Display strings for use in client are not supported.
            </remarks>
            <remarks> 
            See also the following Class/Interface definitions
            Zoom.Net::IScanTerm and Zoom.Net::YazSharp::ScanTerm 
            </remarks>
            <remarks>
            See also http://www.indexdata.dk/yaz/doc/zoom.scan.tkl
            </remarks>
        </member>
        <member name="P:Zoom.Net.IScanSet.Item(System.UInt32)">
            <summary>
            Getting the n-th Scan Term
            </summary>
        </member>
        <member name="P:Zoom.Net.IScanSet.Size">
            <summary>
            Getting the size of the Scan Set in number of terms
            </summary>
        </member>
        <member name="T:Zoom.Net.QueryException">
            <summary>
            Exception thrown when server can not parse query
            </summary>
        </member>
        <member name="T:Zoom.Net.IResultSet">
            <summary>
            The Result Set
            represents a set of records, held on a server, which have been
            identified by searching (that is, submitting a Query to a
            Connection). 
            </summary>
            <remarks>
            The Result Set class supports methods for discovering the number
            of its records, and fetching records either one by one or all at
            once. 
            </remarks>
            <remarks>
            Result Sets essentially are a collection of Records, which can be
            fetched individually by the '[]' operator.
            </remarks>
            <remarks>
            The size operation is supported. 
            </remarks>
            <remarks>
            See also
            Zoom::Net.IResultSetOptionsCollection interface, and
            Zoom.Net::YazSharp::ResultSet implementation class.
            </remarks>
        </member>
        <member name="P:Zoom.Net.IResultSet.Options">
            <summary>
            Getting the IResultSetOptionsCollection options
            </summary>
        </member>
        <member name="P:Zoom.Net.IResultSet.Item(System.UInt32)">
            <summary>
            Fetching a record
            </summary>
        </member>
        <member name="P:Zoom.Net.IResultSet.Item(System.Int32)">
            <summary>
            Fetching a record
            </summary>
        </member>
        <member name="P:Zoom.Net.IResultSet.Size">
            <summary>
            Get size of Result Set in number of Records
            </summary>
        </member>
        <member name="T:Zoom.Net.IPackage">
            <summary>     
            Packages, of type 'itemorder', 'update', or of one of the
            extention types 'create', 'drop', 'commit'.  
            </summary>
            <remarks>
            These packages can be configures through setting appropriate 
            Zoom.Net::IPackageOptionsCollection Options
            </remarks>
        </member>
        <member name="M:Zoom.Net.IPackage.Send">
            <summary>
            Sending Package off to server for processing.
            </summary>
        </member>
        <member name="P:Zoom.Net.IPackage.Options">
            <summary>
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:Zoom.Net.IConnectionOptionsCollection">
            <summary>
            Connection Options can be attached to an Connection before sending 
            queries to the server. 
            </summary>
            <remarks>
            The Zoom::Net interfaces the following standard
            options: user, password, databaseName, which can be set directly
            on an object conforming to Zoom::Net::IConnection with the 
            User, Password and DatabaseName properties.
            </remarks>
            <remarks>
            All other standard options described at 
            http://zoom.z3950.org/api/zoom-1.4.html#3.8 are
            implemented using the Zoom::Net::IConnectionOptions
            </remarks>
            <remarks>
            See possible options and option values at 
            http://www.indexdata.dk/yaz/doc/zoom.tkl#zoom.connections
            </remarks>
            <remarks>
            See also
            Zoom.Net::IResultSetOptionsCollection interface, 
            where similar options can be set after searching.
            </remarks>
        </member>
        <member name="P:Zoom.Net.IConnectionOptionsCollection.Item(System.String)">
            <summary>
            Getting and setting option values
            </summary>
            <remarks>
            See possible options and option values at 
             http://www.indexdata.dk/yaz/doc/zoom.tkl#zoom.connections
            </remarks>
        </member>
        <member name="T:Zoom.Net.IConnectionExtended">
            <summary>
            The ConnectionExtended class supports methods for instantiation and
            searching of targets, together with the housekeeping and option 
            management methods provided on all classes. It allows for extended 
            services
            </summary>
            <remarks>
            The interface IConnectionExtended can be used to search and scan
            exactly as IConnection interface implementations, but 
            extends it with a Package  Zoom.Net::IPackage factory call. 
            </remarks>
            <remarks>
            Search and Scan operations are supported.
            </remarks>
            <remarks>
            IConnectionExtended creation without specifying an actual 
            connection target is not supported.
            </remarks>
            <remarks>
            The exact range of Extended Services implemented on top of the
            ZOOM YAZ C API, including package types and package options, is
            described at http://www.indexdata.dk/yaz/doc/zoom.ext.tkl 
            </remarks>
            <remarks>
            See also Zoom.Net::IConnection interface 
            and Zoom.Net::YazSharp::ConnectionExtended implementation class.
            </remarks>
            <remarks>
            See also http://www.indexdata.dk/yaz/doc/zoom.ext.tkl
            </remarks>
        </member>
        <member name="M:Zoom.Net.IConnectionExtended.Package(System.String)">
            <summary>
            The factory call constructs Packages, of type 'itemorder', 
            'update', or of one of the extention types 'create', 
            'drop', 'commit'. 
            These packages can be configures through setting appropriate      
            Zoom.Net::IPackageOptionsCollection Options.
            </summary>
        </member>
        <member name="T:Zoom.Net.IResultSetOptionsCollection">
            <summary>
            Result Set Options can be attached to an Result Set 
            residing on the server.
            </summary>
            <remarks>
            See possible options and option values at 
            http://www.indexdata.dk/yaz/doc/zoom.resultsets.tkl
            </remarks>
            <remarks>
            See also
            Zoom.Net::IConnectionOptionsCollection interface, 
            where similar options can be set before searching.
            </remarks>
        </member>
        <member name="P:Zoom.Net.IResultSetOptionsCollection.Item(System.String)">
            <summary>
            Getting and setting option values
            </summary>
            <remarks>
            See possible options and option values at 
            http://www.indexdata.dk/yaz/doc/zoom.resultsets.tkl
            </remarks>
        </member>
        <member name="T:Zoom.Net.ConnectionTimeoutException">
            <summary>
            Exception thrown when server connnection search or scan times out  
            </summary>
        </member>
        <member name="T:Zoom.Net.InitRejectedException">
            <summary>
            Exception thrown when server refuses to accept Init Package
            </summary>
        </member>
    </members>
</doc>
